apiVersion: v1
data:
  01_create_database_epix.sql: "DROP SCHEMA IF EXISTS `epix` ;\r\nCREATE DATABASE
    epix DEFAULT CHARACTER SET utf8;\r\n\r\nUSE epix;\r\n\r\nCREATE TABLE identifier_domain
    (\r\n  name varchar(255) NOT NULL,\r\n  label varchar(255) NOT NULL,\r\n  create_timestamp
    timestamp(3) NOT NULL DEFAULT current_timestamp(3),\r\n  timestamp timestamp(3)
    NOT NULL DEFAULT current_timestamp(3),\r\n  description varchar(255) DEFAULT NULL,\r\n
    \ oid varchar(255) NOT NULL,\r\n  PRIMARY KEY (name),\r\n  UNIQUE KEY UK_oid (oid)\r\n)
    ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;\r\n\r\nINSERT INTO identifier_domain
    VALUES\r\n('MPI','MPI',current_timestamp(3),current_timestamp(3),null,'1.2.276.0.76.3.1.132.1.1.1');\r\n\r\nCREATE
    TABLE identifier (\r\n  identifier_domain_name varchar(255) NOT NULL,\r\n  value
    varchar(255) NOT NULL,\r\n  active bit(1) DEFAULT NULL,\r\n  description varchar(255)
    DEFAULT NULL,\r\n  create_timestamp timestamp(3) NOT NULL DEFAULT current_timestamp(3),\r\n
    \ PRIMARY KEY (identifier_domain_name, value),\r\n  KEY `FK_identifier-identifier_domain`
    (identifier_domain_name),\r\n  CONSTRAINT `FK_identifier-identifier_domain` FOREIGN
    KEY (identifier_domain_name) REFERENCES identifier_domain (name)\r\n) ENGINE=InnoDB
    DEFAULT CHARSET=utf8 COLLATE=utf8_bin;\r\n\r\nCREATE TABLE identifier_history
    (\r\n  id bigint(20) NOT NULL AUTO_INCREMENT,\r\n  history_timestamp timestamp(3)
    NOT NULL DEFAULT current_timestamp(3),\r\n  identifier_domain_name varchar(255)
    NOT NULL,\r\n  value varchar(255) NOT NULL,\r\n  active bit(1) DEFAULT NULL,\r\n
    \ description varchar(255) DEFAULT NULL,\r\n  event char(20) NOT NULL,\r\n  comment
    varchar(255) DEFAULT NULL,\r\n  `user` varchar(100) DEFAULT NULL,\r\n  PRIMARY
    KEY (id),\r\n  KEY `FK_identifier_history-identifier` (identifier_domain_name,
    value),\r\n  CONSTRAINT `FK_identifier_history-identifier` foreign key (identifier_domain_name,
    value) references identifier (identifier_domain_name, value)\r\n) ENGINE=InnoDB
    DEFAULT CHARSET=utf8 COLLATE=utf8_bin;\r\n\r\nCREATE TABLE source (\r\n  name
    varchar(255) NOT NULL,\r\n  description varchar(255) DEFAULT NULL,\r\n  label
    varchar(255) DEFAULT NULL,\r\n  create_timestamp timestamp(3) NOT NULL DEFAULT
    current_timestamp(3),\r\n  timestamp timestamp(3) NOT NULL DEFAULT current_timestamp(3),\r\n
    \ PRIMARY KEY (name)\r\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;\r\n\r\nINSERT
    INTO source VALUES ('dummy_safe_source','dummy because of the default-property
    \"safe_source\" in table domain','dummy_safe_source',current_timestamp(3),current_timestamp(3));\r\n\r\nCREATE
    TABLE domain (\r\n  name varchar(255) NOT NULL,\r\n  label varchar(255) DEFAULT
    NULL,\r\n  description varchar(255) DEFAULT NULL,\r\n  create_timestamp timestamp(3)
    NOT NULL DEFAULT current_timestamp(3),\r\n  timestamp timestamp(3) NOT NULL DEFAULT
    current_timestamp(3),\r\n  mpi_domain_name varchar(255) NOT NULL,\r\n  safe_source_name
    varchar(255) NOT NULL,\r\n  config text NOT NULL,\r\n  PRIMARY KEY (name),\r\n
    \ KEY `FK_domain-identifier_domain` (mpi_domain_name),\r\n  KEY `FK_domain-source`
    (safe_source_name),\r\n  CONSTRAINT `FK_domain-identifier_domain` FOREIGN KEY
    (mpi_domain_name) REFERENCES identifier_domain (name),\r\n  CONSTRAINT `FK_domain-source`
    FOREIGN KEY (safe_source_name) REFERENCES source (name)\r\n) ENGINE=InnoDB DEFAULT
    CHARSET=utf8 COLLATE=utf8_bin;\r\n\r\n\r\nCREATE TABLE person (\r\n  id bigint(20)
    NOT NULL AUTO_INCREMENT,\r\n  deactivated bit(1) DEFAULT 0,\r\n  first_mpi_identifier_domain_name
    varchar(255) NOT NULL,\r\n  first_mpi_value varchar(255) NOT NULL,\r\n  domain_name
    varchar(255) NOT NULL,\r\n  create_timestamp timestamp(3) NOT NULL DEFAULT current_timestamp(3),\r\n
    \ timestamp timestamp(3) NOT NULL DEFAULT current_timestamp(3),\r\n  PRIMARY KEY
    (id),\r\n  KEY `FK_person-identifier` (first_mpi_identifier_domain_name, first_mpi_value),\r\n
    \ KEY `FK_person-domain` (domain_name),\r\n  CONSTRAINT `FK_person-identifier`
    FOREIGN KEY (first_mpi_identifier_domain_name, first_mpi_value) REFERENCES identifier
    (identifier_domain_name, value),\r\n  CONSTRAINT `FK_person-domain` FOREIGN KEY
    (domain_name) REFERENCES domain (name)\r\n) ENGINE=InnoDB DEFAULT CHARSET=utf8
    COLLATE=utf8_bin;\r\n\r\nCREATE TABLE identity (\r\n  id bigint(20) NOT NULL AUTO_INCREMENT,\r\n
    \ version int(11) DEFAULT NULL,\r\n  date_of_birth date DEFAULT NULL,\r\n  birth_place
    varchar(255) DEFAULT NULL,\r\n  vital_status int DEFAULT 0,\r\n  date_of_death
    datetime DEFAULT NULL,\r\n  civil_status varchar(255) DEFAULT NULL,\r\n  degree
    varchar(255) DEFAULT NULL,\r\n  first_name varchar(255) DEFAULT NULL,\r\n  gender
    character(1) DEFAULT ' ',\r\n  last_name varchar(255) DEFAULT NULL,\r\n  middle_name
    varchar(255) DEFAULT NULL,\r\n  mother_tongue varchar(255) DEFAULT NULL,\r\n  mothers_maiden_name
    varchar(255) DEFAULT NULL,\r\n  nationality varchar(255) DEFAULT NULL,\r\n  prefix
    varchar(255) DEFAULT NULL,\r\n  race varchar(255) DEFAULT NULL,\r\n  religion
    varchar(255) DEFAULT NULL,\r\n  suffix varchar(255) DEFAULT NULL,\r\n  external_timestamp
    timestamp(3) NULL,\r\n  create_timestamp timestamp(3) NOT NULL DEFAULT current_timestamp(3),\r\n
    \ timestamp timestamp(3) NOT NULL DEFAULT current_timestamp(3),\r\n  value1 varchar(50)
    DEFAULT NULL,\r\n  value10 varchar(15000) DEFAULT NULL,\r\n  value2 varchar(50)
    DEFAULT NULL,\r\n  value3 varchar(50) DEFAULT NULL,\r\n  value4 varchar(50) DEFAULT
    NULL,\r\n  value5 varchar(50) DEFAULT NULL,\r\n  value6 varchar(255) DEFAULT NULL,\r\n
    \ value7 varchar(255) DEFAULT NULL,\r\n  value8 varchar(1000) DEFAULT NULL,\r\n
    \ value9 varchar(1000) DEFAULT NULL,\r\n  person_id bigint(20) NOT NULL,\r\n  source_name
    varchar(255) NOT NULL,\r\n  forced_reference bit(1) DEFAULT 0,\r\n  deactivated
    bit(1) DEFAULT 0,\r\n  PRIMARY KEY (id),\r\n  KEY `FK_identity-person` (person_id),\r\n
    \ KEY `FK_identity-source` (source_name),\r\n  CONSTRAINT `FK_identity-source`
    FOREIGN KEY (source_name) REFERENCES source (name),\r\n  CONSTRAINT `FK_identity-person`
    FOREIGN KEY (person_id) REFERENCES person (id)\r\n) ENGINE=InnoDB DEFAULT CHARSET=utf8
    COLLATE=utf8_bin;\r\n\r\nCREATE TABLE person_history (\r\n  id bigint(20) NOT
    NULL AUTO_INCREMENT,\r\n  deactivated bit(1) DEFAULT 0,\r\n  history_timestamp
    timestamp(3) NOT NULL DEFAULT current_timestamp(3),\r\n  first_mpi_identifier_domain_name
    varchar(255) NOT NULL,\r\n  first_mpi_value varchar(255) NOT NULL,\r\n  person_id
    bigint(20) NOT NULL,\r\n  domain_name varchar(255) NOT NULL,\r\n  event char(20)
    NOT NULL DEFAULT 'UNKNOWN',\r\n  comment varchar(255) DEFAULT NULL,\r\n  `user`
    varchar(100) DEFAULT NULL,\r\n  PRIMARY KEY (id),\r\n  KEY `FK_person_history-identifier`
    (first_mpi_identifier_domain_name, first_mpi_value),\r\n  KEY `FK_person_history-person`
    (person_id),\r\n  KEY `FK_person_history-domain` (domain_name),\r\n  CONSTRAINT
    `FK_person_history-person` FOREIGN KEY (person_id) REFERENCES person (id),\r\n
    \ CONSTRAINT `FK_person_history-identifier` FOREIGN KEY (first_mpi_identifier_domain_name,
    first_mpi_value) REFERENCES identifier (identifier_domain_name, value),\r\n  CONSTRAINT
    `FK_person_history-domain` FOREIGN KEY (domain_name) REFERENCES domain (name)\r\n)
    ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;\r\n\r\nCREATE TABLE identity_history
    (\r\n  id bigint(20) NOT NULL AUTO_INCREMENT,\r\n  identity_version int(11) DEFAULT
    NULL,\r\n  date_of_birth datetime DEFAULT NULL,\r\n  birth_place varchar(255)
    DEFAULT NULL,\r\n  vital_status int DEFAULT 0,\r\n  date_of_death datetime DEFAULT
    NULL,\r\n  civil_status varchar(255) DEFAULT NULL,\r\n  degree varchar(255) DEFAULT
    NULL,\r\n  first_name varchar(255) DEFAULT NULL,\r\n  gender character(1) DEFAULT
    NULL,\r\n  last_name varchar(255) DEFAULT NULL,\r\n  middle_name varchar(255)
    DEFAULT NULL,\r\n  mother_tongue varchar(255) DEFAULT NULL,\r\n  mothers_maiden_name
    varchar(255) DEFAULT NULL,\r\n  nationality varchar(255) DEFAULT NULL,\r\n  event
    char(13) NOT NULL,\r\n  person_id bigint(20) NOT NULL,\r\n  prefix varchar(255)
    DEFAULT NULL,\r\n  race varchar(255) DEFAULT NULL,\r\n  religion varchar(255)
    DEFAULT NULL,\r\n  suffix varchar(255) DEFAULT NULL,\r\n  external_timestamp timestamp(3)
    NULL,\r\n  history_timestamp timestamp(3) NOT NULL DEFAULT current_timestamp(3),\r\n
    \ value1 varchar(50) DEFAULT NULL,\r\n  value10 varchar(15000) DEFAULT NULL,\r\n
    \ value2 varchar(50) DEFAULT NULL,\r\n  value3 varchar(50) DEFAULT NULL,\r\n  value4
    varchar(50) DEFAULT NULL,\r\n  value5 varchar(50) DEFAULT NULL,\r\n  value6 varchar(255)
    DEFAULT NULL,\r\n  value7 varchar(255) DEFAULT NULL,\r\n  value8 varchar(1000)
    DEFAULT NULL,\r\n  value9 varchar(1000) DEFAULT NULL,\r\n  identity_id bigint(20)
    NOT NULL,\r\n  source_name varchar(255) NOT NULL,\r\n  forced_reference bit(1)
    DEFAULT 0,\r\n  deactivated bit(1) DEFAULT 0,\r\n  comment varchar(255) DEFAULT
    NULL,\r\n  `user` varchar(100) DEFAULT NULL,\r\n  matchingScore double DEFAULT
    0,\r\n  matching_identity_id bigint(20) DEFAULT NULL,\r\n  PRIMARY KEY (id),\r\n
    \ KEY `FK_identity_history-identity` (identity_id),\r\n  KEY `FK_identity_history-source`
    (source_name),\r\n  KEY `FK_identity_history-person` (person_id),\r\n  CONSTRAINT
    `FK_identity_history-source` FOREIGN KEY (source_name) REFERENCES source (name),\r\n
    \ CONSTRAINT `FK_identity_history-identity` FOREIGN KEY (identity_id) REFERENCES
    identity (id),\r\n  CONSTRAINT `FK_identity_history-person` FOREIGN KEY (person_id)
    REFERENCES person (id)\r\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;\r\n\r\nCREATE
    TABLE contact (\r\n  id bigint(20) NOT NULL AUTO_INCREMENT,\r\n  version int(11)
    DEFAULT NULL,\r\n  city varchar(255) DEFAULT NULL,\r\n  country varchar(255) DEFAULT
    NULL,\r\n  country_code varchar(255) DEFAULT NULL,\r\n  district varchar(255)
    DEFAULT NULL,\r\n  email varchar(255) DEFAULT NULL,\r\n  phone varchar(255) DEFAULT
    NULL,\r\n  state varchar(255) DEFAULT NULL,\r\n  street varchar(255) DEFAULT NULL,\r\n
    \ zip_code varchar(255) DEFAULT NULL,\r\n  municipality_key varchar(255) DEFAULT
    NULL,\r\n  date_of_move_in datetime DEFAULT NULL,\r\n  date_of_move_out datetime
    DEFAULT NULL,\r\n  deactivated bit(1) DEFAULT 0,\r\n  external_timestamp timestamp(3)
    NULL,\r\n  create_timestamp timestamp(3) NOT NULL DEFAULT current_timestamp(3),\r\n
    \ timestamp timestamp(3) NOT NULL DEFAULT current_timestamp(3),\r\n  identity_id
    bigint(20) NOT NULL,\r\n  PRIMARY KEY (id),\r\n  KEY `FK_contact-identity` (identity_id),\r\n
    \ CONSTRAINT `FK_contact-identity` FOREIGN KEY (identity_id) REFERENCES identity
    (id)\r\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;\r\n\r\nCREATE TABLE
    contact_history (\r\n  id bigint(20) NOT NULL AUTO_INCREMENT,\r\n  contact_id
    bigint(20) NOT NULL,\r\n  contact_version int(11) DEFAULT NULL,\r\n  city varchar(255)
    DEFAULT NULL,\r\n  country varchar(255) DEFAULT NULL,\r\n  country_code varchar(255)
    DEFAULT NULL,\r\n  district varchar(255) DEFAULT NULL,\r\n  email varchar(255)
    DEFAULT NULL,\r\n  phone varchar(255) DEFAULT NULL,\r\n  state varchar(255) DEFAULT
    NULL,\r\n  street varchar(255) DEFAULT NULL,\r\n  zip_code varchar(255) DEFAULT
    NULL,\r\n  municipality_key varchar(255) DEFAULT NULL,\r\n  date_of_move_in datetime
    DEFAULT NULL,\r\n  date_of_move_out datetime DEFAULT NULL,\r\n  deactivated bit(1)
    DEFAULT 0,\r\n  external_timestamp timestamp(3) NULL,\r\n  history_timestamp timestamp(3)
    NOT NULL DEFAULT current_timestamp(3),\r\n  identity_id bigint(20) NOT NULL,\r\n
    \ event char(13) NOT NULL DEFAULT 'UNKNOWN',\r\n  comment varchar(255) DEFAULT
    NULL,\r\n  `user` varchar(100) DEFAULT NULL,\r\n  PRIMARY KEY (id),\r\n  KEY `FK_contact_history-identity`
    (identity_id),\r\n  KEY `FK_contact_history-contact` (contact_id),\r\n  CONSTRAINT
    `FK_contact_history-contact` foreign key (contact_id) references contact (id),\r\n
    \ CONSTRAINT `FK_contact_history-identity` foreign key (identity_id) references
    identity (id)\r\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;\r\n\r\nCREATE
    TABLE identity_identifier (\r\n  identity_id bigint(20) NOT NULL,\r\n  identifiers_identifier_domain_name
    varchar(255) NOT NULL,\r\n  identifiers_value varchar(255) NOT NULL,\r\n  KEY
    `FK_identity_identifier-identifier` (identifiers_identifier_domain_name,identifiers_value),\r\n
    \ KEY `FK_identity_identifier-identity` (identity_id),\r\n  CONSTRAINT `FK_identity_identifier-identity`
    FOREIGN KEY (identity_id) REFERENCES identity (id),\r\n  CONSTRAINT `FK_identity_identifier-identifier`
    FOREIGN KEY (identifiers_identifier_domain_name, identifiers_value) REFERENCES
    identifier (identifier_domain_name, value)\r\n) ENGINE=InnoDB DEFAULT CHARSET=utf8
    COLLATE=utf8_bin;\r\n\r\nCREATE TABLE identity_history_identifier (\r\n  identity_history_id
    bigint(20) NOT NULL,\r\n  identifiers_identifier_domain_name varchar(255) NOT
    NULL,\r\n  identifiers_value varchar(255) NOT NULL,\r\n  KEY `FK_identity_history_identifier-identifier`
    (identifiers_identifier_domain_name, identifiers_value),\r\n  KEY `FK_identity_history_identifier-identity_history`
    (identity_history_id),\r\n  CONSTRAINT `FK_identity_history_identifier-identity_history`
    FOREIGN KEY (identity_history_id) REFERENCES identity_history (id),\r\n  CONSTRAINT
    `FK_identity_history_identifier-identifier` FOREIGN KEY (identifiers_identifier_domain_name,
    identifiers_value) REFERENCES identifier (identifier_domain_name, value)\r\n)
    ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;\r\n\r\nCREATE TABLE identity_preprocessed
    (\r\n  identity_id bigint(20) NOT NULL,\r\n  date_of_birth char(8) NOT NULL,\r\n
    \ birth_place varchar(255) NOT NULL DEFAULT '',\r\n  civil_status varchar(255)
    NOT NULL DEFAULT '',\r\n  degree varchar(255) NOT NULL DEFAULT '',\r\n  first_name
    varchar(255) NOT NULL DEFAULT '',\r\n  gender character(1) DEFAULT ' ',\r\n  last_name
    varchar(255) NOT NULL DEFAULT '',\r\n  middle_name varchar(255) NOT NULL DEFAULT
    '',\r\n  mother_tongue varchar(255) NOT NULL DEFAULT '',\r\n  mothers_maiden_name
    varchar(255) NOT NULL DEFAULT '',\r\n  nationality varchar(255) NOT NULL DEFAULT
    '',\r\n  external_timestamp timestamp(3) NULL,\r\n  person_id bigint(20) NOT NULL,\r\n
    \ prefix varchar(255) NOT NULL DEFAULT '',\r\n  race varchar(255) NOT NULL DEFAULT
    '',\r\n  religion varchar(255) NOT NULL DEFAULT '',\r\n  suffix varchar(255) NOT
    NULL DEFAULT '',\r\n  create_timestamp timestamp(3) NOT NULL DEFAULT current_timestamp(3),\r\n
    \ timestamp timestamp(3) NOT NULL DEFAULT current_timestamp(3),\r\n  value1 varchar(50)
    NOT NULL DEFAULT '',\r\n  value10 varchar(15000) NOT NULL DEFAULT '',\r\n  value2
    varchar(50) NOT NULL DEFAULT '',\r\n  value3 varchar(50) NOT NULL DEFAULT '',\r\n
    \ value4 varchar(50) NOT NULL DEFAULT '',\r\n  value5 varchar(50) NOT NULL DEFAULT
    '',\r\n  value6 varchar(255) NOT NULL DEFAULT '',\r\n  value7 varchar(255) NOT
    NULL DEFAULT '',\r\n  value8 varchar(1000) NOT NULL DEFAULT '',\r\n  value9 varchar(1000)
    NOT NULL DEFAULT '',\r\n  domain_name varchar(255) NOT NULL,\r\n  forced_reference
    bit(1) DEFAULT 0,\r\n  deactivated bit(1) DEFAULT 0,\r\n  PRIMARY KEY (identity_id),\r\n
    \ KEY `FK_identity_preprocessed-domain` (domain_name),\r\n  KEY `FK_identity_preprocessed-identity_person`
    (person_id),\r\n  CONSTRAINT `FK_identity_preprocessed-identity` FOREIGN KEY (identity_id)
    REFERENCES identity (id),\r\n  CONSTRAINT `FK_identity_preprocessed-person` FOREIGN
    KEY (person_id) REFERENCES person (id),\r\n  CONSTRAINT `FK_identity_preprocessed-domain`
    FOREIGN KEY (domain_name) REFERENCES domain (name)\r\n) ENGINE=InnoDB DEFAULT
    CHARSET=utf8 COLLATE=utf8_bin;\r\n\r\nCREATE TABLE identitylink (\r\n  id bigint(20)
    NOT NULL AUTO_INCREMENT,\r\n  algorithm varchar(255) DEFAULT NULL,\r\n  threshold
    double NOT NULL,\r\n  create_timestamp timestamp(3) NOT NULL DEFAULT current_timestamp(3),\r\n
    \ dest_identity bigint(20) NOT NULL,\r\n  src_identity bigint(20) NOT NULL,\r\n
    \ priority char(14) NOT NULL DEFAULT 'OPEN',\r\n  type char(16) NOT NULL DEFAULT
    'DEFAULT',\r\n  PRIMARY KEY (id),\r\n  KEY `FK_identitylink-dest_identity` (dest_identity),\r\n
    \ KEY `FK_identitylink-src_identity` (src_identity),\r\n  CONSTRAINT `FK_identitylink-src_identity`
    FOREIGN KEY (src_identity) REFERENCES identity (id),\r\n  CONSTRAINT `FK_identitylink-dest_identity`
    FOREIGN KEY (dest_identity) REFERENCES identity (id)\r\n) ENGINE=InnoDB DEFAULT
    CHARSET=utf8 COLLATE=utf8_bin;\r\n\r\nCREATE TABLE identitylink_history (\r\n
    \ id bigint(20) NOT NULL AUTO_INCREMENT,\r\n  algorithm varchar(255) DEFAULT NULL,\r\n
    \ event char(14) NOT NULL,\r\n  comment varchar(255) DEFAULT NULL,\r\n  threshold
    double NOT NULL,\r\n  history_timestamp timestamp(3) NOT NULL DEFAULT current_timestamp(3),\r\n
    \ dest_identity bigint(20) NOT NULL,\r\n  dest_person bigint(20) NOT NULL,\r\n
    \ src_identity bigint(20) NOT NULL,\r\n  src_person bigint(20) NOT NULL,\r\n  updated_identity
    bigint(20) DEFAULT NULL,\r\n  `user` varchar(100) DEFAULT NULL,\r\n  identity_link_id
    bigint(20) DEFAULT NULL,\r\n  initial_create_timestamp timestamp(3) NOT NULL DEFAULT
    '2000-01-01 00:00:00',\r\n  type char(16) NOT NULL DEFAULT 'DEFAULT',\r\n  PRIMARY
    KEY (id),\r\n  KEY `FK_identitylink_history-dest_identity` (dest_identity),\r\n
    \ KEY `FK_identitylink_history-dest_person` (dest_person),\r\n  KEY `FK_identitylink_history-src_identity`
    (src_identity),\r\n  KEY `FK_identitylink_history-src_person` (src_person),\r\n
    \ KEY `FK_identitylink_history-updated_identity` (updated_identity),\r\n  CONSTRAINT
    `FK_identitylink_history-updated_identity` FOREIGN KEY (updated_identity) REFERENCES
    identity (id),\r\n  CONSTRAINT `FK_identitylink_history-src_person` FOREIGN KEY
    (src_person) REFERENCES person (id),\r\n  CONSTRAINT `FK_identitylink_history-src_identity`
    FOREIGN KEY (src_identity) REFERENCES identity (id),\r\n  CONSTRAINT `FK_identitylink_history-dest_person`
    FOREIGN KEY (dest_person) REFERENCES person (id),\r\n  CONSTRAINT `FK_identitylink_history-dest_identity_id`
    FOREIGN KEY (dest_identity) REFERENCES identity (id)\r\n) ENGINE=InnoDB DEFAULT
    CHARSET=utf8 COLLATE=utf8_bin;\r\n\r\nCREATE TABLE IF NOT EXISTS stat_entry (\r\n
    \ STAT_ENTRY_ID BIGINT(20) NOT NULL AUTO_INCREMENT,\r\n  `ENTRYDATE` TIMESTAMP(3)
    DEFAULT CURRENT_TIMESTAMP(3) NOT NULL,\r\n  PRIMARY KEY (STAT_ENTRY_ID)\r\n) ENGINE
    = InnoDB DEFAULT CHARACTER SET = utf8 COLLATE=utf8_bin;\r\n\r\nCREATE TABLE IF
    NOT EXISTS stat_value (\r\n  `stat_value_id` BIGINT(20) NULL DEFAULT NULL ,\r\n
    \ `stat_value` BIGINT(20) NULL DEFAULT NULL ,\r\n  `stat_attr` VARCHAR(255) NULL
    DEFAULT NULL ,\r\n  INDEX FK_stat_value_stat_value_id (stat_value_id ASC),\r\n
    \ CONSTRAINT FK_stat_value_stat_value_id FOREIGN KEY (stat_value_id) REFERENCES
    stat_entry (STAT_ENTRY_ID)\r\n) ENGINE = InnoDB DEFAULT CHARACTER SET = utf8 COLLATE=utf8_bin;\r\n\r\nCREATE
    TABLE sequence\r\n(\r\n   SEQ_NAME varchar(50) PRIMARY KEY NOT NULL,\r\n   SEQ_COUNT
    decimal(38,0)\r\n) ENGINE = InnoDB DEFAULT CHARACTER SET = utf8 COLLATE=utf8_bin;\r\n\r\nCREATE
    USER 'epix_user'@'%' IDENTIFIED BY 'epix_password';\r\nGRANT ALL ON epix.* TO
    'epix_user'@'%';\r\n"
  01_create_database_gras.sql: "-- version from 2021-08-03 RS\n\nDROP SCHEMA IF EXISTS
    `gras` ;\n/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;\n/*!40101
    SET NAMES utf8 */;\n/*!50503 SET NAMES utf8mb4 */;\n/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS,
    FOREIGN_KEY_CHECKS=0 */;\n/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO'
    */;\n\nCREATE DATABASE gras DEFAULT CHARACTER SET utf8;\n\nUSE gras;\n\n-- Exportiere
    Struktur von Tabelle gras.domain\nCREATE TABLE IF NOT EXISTS `domain` (\n  `name`
    varchar(255) NOT NULL DEFAULT '',\n  `description` varchar(255) NOT NULL DEFAULT
    '',\n  PRIMARY KEY (`name`)\n) ENGINE=InnoDB DEFAULT CHARSET=latin1;\n\n-- Exportiere
    Struktur von View gras.domainuser_password\n-- Erstelle temporäre Tabelle um View
    Abhängigkeiten zuvorzukommen\nCREATE TABLE `domainuser_password` (\n\t`domainuser`
    VARCHAR(511) NOT NULL COLLATE 'latin1_swedish_ci',\n\t`password` VARCHAR(255)
    NULL COLLATE 'latin1_swedish_ci'\n) ENGINE=MyISAM;\n\n-- Exportiere Struktur von
    View gras.domainuser_role\n-- Erstelle temporäre Tabelle um View Abhängigkeiten
    zuvorzukommen\nCREATE TABLE `domainuser_role` (\n\t`domainuser` VARCHAR(511) NOT
    NULL COLLATE 'latin1_swedish_ci',\n\t`role` VARCHAR(255) NOT NULL COLLATE 'latin1_swedish_ci'\n)
    ENGINE=MyISAM;\n\n-- Exportiere Struktur von Tabelle gras.group_\nCREATE TABLE
    IF NOT EXISTS `group_` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `name` varchar(255)
    NOT NULL DEFAULT '',\n  `project_name` varchar(255) NOT NULL DEFAULT '',\n  `description`
    varchar(255) NOT NULL DEFAULT '',\n  PRIMARY KEY (`id`),\n  UNIQUE KEY `UNIQUE_NAME_PROJECT`
    (`name`,`project_name`),\n  KEY `FK_PROJECT_GROUP` (`project_name`),\n  CONSTRAINT
    `FK_PROJECT_GROUP` FOREIGN KEY (`project_name`) REFERENCES `project` (`name`)\n)
    ENGINE=InnoDB AUTO_INCREMENT=16 DEFAULT CHARSET=latin1;\n\n-- Exportiere Struktur
    von Tabelle gras.group_role_mapping\nCREATE TABLE IF NOT EXISTS `group_role_mapping`
    (\n  `group_id` int(11) NOT NULL,\n  `role_id` int(11) NOT NULL,\n  PRIMARY KEY
    (`group_id`,`role_id`),\n  KEY `FK_GROUP` (`group_id`),\n  KEY `FK_ROLE` (`role_id`),\n
    \ CONSTRAINT `FK_GROUP` FOREIGN KEY (`group_id`) REFERENCES `group_` (`id`) ON
    DELETE CASCADE,\n  CONSTRAINT `FK_ROLE` FOREIGN KEY (`role_id`) REFERENCES `role`
    (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=latin1;\n\n-- Exportiere Struktur von
    Tabelle gras.hist_domain\nCREATE TABLE IF NOT EXISTS `hist_domain` (\n  `id` int(11)
    NOT NULL AUTO_INCREMENT,\n  `name` varchar(255) NOT NULL,\n  `description` varchar(255)
    NOT NULL,\n  `timestamp` datetime NOT NULL,\n  `action` varchar(255) NOT NULL,\n
    \ PRIMARY KEY (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=latin1;\n\n-- Exportiere
    Struktur von Tabelle gras.hist_group_\nCREATE TABLE IF NOT EXISTS `hist_group_`
    (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `group_id` int(11) NOT NULL,\n  `name`
    varchar(255) NOT NULL,\n  `project_name` varchar(255) NOT NULL,\n  `description`
    varchar(255) NOT NULL,\n  `timestamp` datetime NOT NULL,\n  `action` varchar(255)
    NOT NULL,\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB AUTO_INCREMENT=15 DEFAULT CHARSET=latin1;\n\n--
    Exportiere Struktur von Tabelle gras.hist_group_role_mapping\nCREATE TABLE IF
    NOT EXISTS `hist_group_role_mapping` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n
    \ `group_id` varchar(255) NOT NULL,\n  `role_id` varchar(255) NOT NULL,\n  `timestamp`
    datetime NOT NULL,\n  `action` varchar(255) NOT NULL,\n  PRIMARY KEY (`id`)\n)
    ENGINE=InnoDB DEFAULT CHARSET=latin1;\n\n-- Exportiere Struktur von Tabelle gras.hist_permission\nCREATE
    TABLE IF NOT EXISTS `hist_permission` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n
    \ `group_id` int(11) NOT NULL,\n  `user_name` varchar(255) NOT NULL,\n  `domain_name`
    varchar(255) NOT NULL,\n  `timestamp` datetime NOT NULL,\n  `action` varchar(255)
    NOT NULL,\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=latin1;\n\n--
    Exportiere Struktur von Tabelle gras.hist_project\nCREATE TABLE IF NOT EXISTS
    `hist_project` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `name` varchar(255)
    NOT NULL,\n  `description` varchar(255) NOT NULL,\n  `timestamp` datetime NOT
    NULL,\n  `action` varchar(255) NOT NULL,\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB
    DEFAULT CHARSET=latin1;\n\n-- Exportiere Struktur von Tabelle gras.hist_role\nCREATE
    TABLE IF NOT EXISTS `hist_role` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `role_id`
    int(11) NOT NULL,\n  `name` varchar(255) NOT NULL,\n  `project_name` varchar(255)
    NOT NULL,\n  `description` varchar(255) NOT NULL,\n  `timestamp` datetime NOT
    NULL,\n  `action` varchar(255) NOT NULL,\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB
    DEFAULT CHARSET=latin1;\n\n-- Exportiere Struktur von Tabelle gras.hist_user\nCREATE
    TABLE IF NOT EXISTS `hist_user` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `name`
    varchar(255) NOT NULL DEFAULT '',\n  `password` varchar(255) DEFAULT NULL,\n  `active`
    tinyint(1) DEFAULT '1',\n  `description` varchar(255) NOT NULL DEFAULT '',\n  `email`
    varchar(255) NOT NULL DEFAULT '',\n  `timestamp` datetime NOT NULL,\n  `action`
    varchar(255) NOT NULL,\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=latin1;\n\n--
    Exportiere Struktur von Tabelle gras.permission\nCREATE TABLE IF NOT EXISTS `permission`
    (\n  `group_id` int(11) NOT NULL,\n  `user_name` varchar(255) NOT NULL DEFAULT
    '',\n  `domain_name` varchar(255) NOT NULL DEFAULT '',\n  PRIMARY KEY (`group_id`,`user_name`,`domain_name`),\n
    \ KEY `FK_PERMISSION_DOMAIN` (`domain_name`),\n  KEY `FK_PERMISSION_USER` (`user_name`),\n
    \ KEY `FK_PERMISSION_GROUP` (`group_id`),\n  CONSTRAINT `FK_PERMISSION_DOMAIN`
    FOREIGN KEY (`domain_name`) REFERENCES `domain` (`name`),\n  CONSTRAINT `FK_PERMISSION_GROUP`
    FOREIGN KEY (`group_id`) REFERENCES `group_` (`id`),\n  CONSTRAINT `FK_PERMISSION_USER`
    FOREIGN KEY (`user_name`) REFERENCES `user` (`name`)\n) ENGINE=InnoDB DEFAULT
    CHARSET=latin1;\n\n-- Exportiere Struktur von Tabelle gras.project\nCREATE TABLE
    IF NOT EXISTS `project` (\n  `name` varchar(255) NOT NULL DEFAULT '',\n  `description`
    varchar(255) NOT NULL DEFAULT '',\n  PRIMARY KEY (`name`)\n) ENGINE=InnoDB DEFAULT
    CHARSET=latin1;\n\n-- Exportiere Struktur von Tabelle gras.role\nCREATE TABLE
    IF NOT EXISTS `role` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `name` varchar(255)
    NOT NULL DEFAULT '',\n  `project_name` varchar(255) NOT NULL DEFAULT '',\n  `description`
    varchar(255) NOT NULL DEFAULT '',\n  PRIMARY KEY (`id`),\n  UNIQUE KEY `UNIQUE_NAME_PROJECT`
    (`name`),\n  KEY `FK_PROJECT_ROLE` (`project_name`),\n  CONSTRAINT `FK_PROJECT_ROLE`
    FOREIGN KEY (`project_name`) REFERENCES `project` (`name`)\n) ENGINE=InnoDB AUTO_INCREMENT=11
    DEFAULT CHARSET=latin1;\n\n-- Exportiere Struktur von Tabelle gras.user\nCREATE
    TABLE IF NOT EXISTS `user` (\n  `name` varchar(255) NOT NULL DEFAULT '',\n  `password`
    varchar(255) DEFAULT NULL,\n  `active` tinyint(1) DEFAULT '1',\n  `description`
    varchar(255) NOT NULL DEFAULT '',\n  `email` varchar(255) NOT NULL DEFAULT '',\n
    \ PRIMARY KEY (`name`)\n) ENGINE=InnoDB DEFAULT CHARSET=latin1;\n\n-- Exportiere
    Struktur von View gras.validate\n-- Erstelle temporäre Tabelle um View Abhängigkeiten
    zuvorzukommen\nCREATE TABLE `validate` (\n\t`domainuser` VARCHAR(511) NOT NULL
    COLLATE 'latin1_swedish_ci',\n\t`password` VARCHAR(255) NULL COLLATE 'latin1_swedish_ci',\n\t`role`
    VARCHAR(255) NOT NULL COLLATE 'latin1_swedish_ci'\n) ENGINE=MyISAM;\n\n-- Exportiere
    Struktur von Trigger gras.deleteDomain\nSET @OLDTMP_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO';\nDELIMITER
    //\nCREATE TRIGGER `deleteDomain` BEFORE DELETE ON `domain` FOR EACH ROW BEGIN\n
    \   INSERT INTO hist_domain(name,description,timestamp,action) \n        VALUES(OLD.name,OLD.description,
    now(),'delete');\n    DELETE FROM gras.permission WHERE domain_name = OLD.name;\nEND//\nDELIMITER
    ;\nSET SQL_MODE=@OLDTMP_SQL_MODE;\n\n-- Exportiere Struktur von Trigger gras.deleteGroup\nSET
    @OLDTMP_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO';\nDELIMITER //\nCREATE
    TRIGGER `deleteGroup` BEFORE DELETE ON `group_` FOR EACH ROW BEGIN\n    INSERT
    INTO hist_group_(group_id,name,project_name,description,timestamp,action)\n        VALUES(OLD.id,OLD.name,OLD.project_name,OLD.description,
    now(),\n\t\t\t'delete');\n    DELETE FROM gras.group_role_mapping WHERE group_id
    = OLD.id;\n    DELETE FROM gras.permission WHERE group_id = OLD.id;\nEND//\nDELIMITER
    ;\nSET SQL_MODE=@OLDTMP_SQL_MODE;\n\n-- Exportiere Struktur von Trigger gras.deleteGroupRoleMapping\nSET
    @OLDTMP_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO';\nDELIMITER //\nCREATE
    TRIGGER `deleteGroupRoleMapping` BEFORE DELETE ON `group_role_mapping` FOR EACH
    ROW INSERT INTO hist_group_role_mapping(group_id,role_id,timestamp,action)\n        VALUES(OLD.group_id,
    OLD.role_id, now() ,'delete' )//\nDELIMITER ;\nSET SQL_MODE=@OLDTMP_SQL_MODE;\n\n--
    Exportiere Struktur von Trigger gras.deletePermission\nSET @OLDTMP_SQL_MODE=@@SQL_MODE,
    SQL_MODE='NO_AUTO_VALUE_ON_ZERO';\nDELIMITER //\nCREATE TRIGGER `deletePermission`
    BEFORE DELETE ON `permission` FOR EACH ROW INSERT INTO hist_permission(group_id,user_name,domain_name,timestamp,action)\n
    \       VALUES(OLD.group_id, OLD.user_name, OLD.domain_name, now(), 'delete' )//\nDELIMITER
    ;\nSET SQL_MODE=@OLDTMP_SQL_MODE;\n\n-- Exportiere Struktur von Trigger gras.deleteProject\nSET
    @OLDTMP_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO';\nDELIMITER //\nCREATE
    TRIGGER `deleteProject` BEFORE DELETE ON `project` FOR EACH ROW BEGIN\n    INSERT
    INTO hist_project(name,description,timestamp,action) \n        VALUES(OLD.name,OLD.description,
    now(),'delete');\n    DELETE FROM gras.group_ WHERE project_name = OLD.name;\n
    \   DELETE FROM gras.role WHERE project_name = OLD.name;\nEND//\nDELIMITER ;\nSET
    SQL_MODE=@OLDTMP_SQL_MODE;\n\n-- Exportiere Struktur von Trigger gras.deleteRole\nSET
    @OLDTMP_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO';\nDELIMITER //\nCREATE
    TRIGGER `deleteRole` BEFORE DELETE ON `role` FOR EACH ROW BEGIN\n    INSERT INTO
    hist_role(role_id,name,project_name,description,timestamp,action)\n        VALUES(OLD.id,OLD.name,
    OLD.project_name, OLD.description, now(),\n\t\t\t'delete');\n    DELETE FROM gras.group_role_mapping
    WHERE role_id = OLD.id;\nEND//\nDELIMITER ;\nSET SQL_MODE=@OLDTMP_SQL_MODE;\n\n--
    Exportiere Struktur von Trigger gras.deleteUser\nSET @OLDTMP_SQL_MODE=@@SQL_MODE,
    SQL_MODE='NO_AUTO_VALUE_ON_ZERO';\nDELIMITER //\nCREATE TRIGGER `deleteUser` BEFORE
    DELETE ON `user` FOR EACH ROW BEGIN\n    INSERT INTO hist_user(name,password,active,description,email,timestamp,action)\n
    \       VALUES(OLD.name, OLD.password, OLD.active,OLD.description,OLD.email, now(),
    'delete' );\n    DELETE FROM gras.permission WHERE user_name = OLD.name;\nEND//\nDELIMITER
    ;\nSET SQL_MODE=@OLDTMP_SQL_MODE;\n\n-- Exportiere Struktur von Trigger gras.insertGroupRoleMapping\nSET
    @OLDTMP_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO';\nDELIMITER //\nCREATE
    TRIGGER `insertGroupRoleMapping` BEFORE INSERT ON `group_role_mapping` FOR EACH
    ROW BEGIN\n    DECLARE msg VARCHAR(255);\n    IF NOT EXISTS (SELECT * FROM (SELECT
    r.id AS role_id , g.id AS group_id FROM role r, group_ g WHERE r.id = NEW.role_id
    AND g.id = NEW.group_id AND g.project_name = r.project_name) AS joined) THEN\n
    \       set msg = \"Role and Group have to belong to the same Project\";\n        SIGNAL
    SQLSTATE '45000' SET MESSAGE_TEXT = msg;\n    END IF;        \nEND//\nDELIMITER
    ;\nSET SQL_MODE=@OLDTMP_SQL_MODE;\n\n-- Exportiere Struktur von Trigger gras.updateDomain\nSET
    @OLDTMP_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO';\nDELIMITER //\nCREATE
    TRIGGER `updateDomain` BEFORE UPDATE ON `domain` FOR EACH ROW INSERT INTO hist_domain(name,description,timestamp,action)
    \n\t\tVALUES(OLD.name,OLD.description, now(),'update')//\nDELIMITER ;\nSET SQL_MODE=@OLDTMP_SQL_MODE;\n\n--
    Exportiere Struktur von Trigger gras.updateGroup\nSET @OLDTMP_SQL_MODE=@@SQL_MODE,
    SQL_MODE='NO_AUTO_VALUE_ON_ZERO';\nDELIMITER //\nCREATE TRIGGER `updateGroup`
    BEFORE UPDATE ON `group_` FOR EACH ROW INSERT INTO hist_group_(group_id,name,project_name,description,timestamp,action)\n
    \       VALUES(OLD.id,OLD.name,OLD.project_name,OLD.description, now(),\n\t\t\t'update')//\nDELIMITER
    ;\nSET SQL_MODE=@OLDTMP_SQL_MODE;\n\n-- Exportiere Struktur von Trigger gras.updateGroupRoleMapping\nSET
    @OLDTMP_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO';\nDELIMITER //\nCREATE
    TRIGGER `updateGroupRoleMapping` BEFORE UPDATE ON `group_role_mapping` FOR EACH
    ROW INSERT INTO hist_group_role_mapping(group_id,role_id,timestamp,action)\n        VALUES(OLD.group_id,
    OLD.role_id, now() ,'update' )//\nDELIMITER ;\nSET SQL_MODE=@OLDTMP_SQL_MODE;\n\n--
    Exportiere Struktur von Trigger gras.updatePermission\nSET @OLDTMP_SQL_MODE=@@SQL_MODE,
    SQL_MODE='NO_AUTO_VALUE_ON_ZERO';\nDELIMITER //\nCREATE TRIGGER `updatePermission`
    BEFORE UPDATE ON `permission` FOR EACH ROW INSERT INTO hist_permission(group_id,user_name,domain_name,timestamp,action)\n
    \       VALUES(OLD.group_id, OLD.user_name, OLD.domain_name, now(), 'update' )//\nDELIMITER
    ;\nSET SQL_MODE=@OLDTMP_SQL_MODE;\n\n-- Exportiere Struktur von Trigger gras.updateProject\nSET
    @OLDTMP_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO';\nDELIMITER //\nCREATE
    TRIGGER `updateProject` BEFORE UPDATE ON `project` FOR EACH ROW INSERT INTO hist_project(name,description,timestamp,action)
    \n        VALUES(OLD.name,OLD.description, now(),'update')//\nDELIMITER ;\nSET
    SQL_MODE=@OLDTMP_SQL_MODE;\n\n-- Exportiere Struktur von Trigger gras.updateRole\nSET
    @OLDTMP_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO';\nDELIMITER //\nCREATE
    TRIGGER `updateRole` BEFORE UPDATE ON `role` FOR EACH ROW INSERT INTO hist_role(role_id,name,project_name,description,timestamp,action)\n
    \       VALUES(OLD.id,OLD.name, OLD.project_name,OLD.description, now(),\n\t\t\t'update')//\nDELIMITER
    ;\nSET SQL_MODE=@OLDTMP_SQL_MODE;\n\n-- Exportiere Struktur von Trigger gras.updateUser\nSET
    @OLDTMP_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO';\nDELIMITER //\nCREATE
    TRIGGER `updateUser` BEFORE UPDATE ON `user` FOR EACH ROW INSERT INTO hist_user(name,password,active,description,email,timestamp,action)\n
    \       VALUES(OLD.name, OLD.password, OLD.active,OLD.description,OLD.email, now(),
    'update' )//\nDELIMITER ;\nSET SQL_MODE=@OLDTMP_SQL_MODE;\n\n-- Exportiere Struktur
    von View gras.domainuser_password\n-- Entferne temporäre Tabelle und erstelle
    die eigentliche View\nDROP TABLE IF EXISTS `domainuser_password`;\nCREATE ALGORITHM=UNDEFINED
    DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `domainuser_password` AS
    select distinct concat_ws('@',`p`.`user_name`,`p`.`domain_name`) AS `domainuser`,`u`.`password`
    AS `password` from (`permission` `p` join `user` `u`) where ((`u`.`name` = `p`.`user_name`)
    and (`u`.`active` = 1));\n\n-- Exportiere Struktur von View gras.domainuser_role\n--
    Entferne temporäre Tabelle und erstelle die eigentliche View\nDROP TABLE IF EXISTS
    `domainuser_role`;\nCREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL
    SECURITY DEFINER VIEW `domainuser_role` AS select \n\ndistinct concat_ws('@',`p`.`user_name`,`p`.`domain_name`)
    AS `domainuser`,\n`r`.`name` AS `role` \nfrom (((`permission` `p` join `group_role_mapping`
    `m`) join `role` `r`) join `user` `u`)\n\nwhere (\n(`p`.`group_id` = `m`.`group_id`)
    and \n(`m`.`role_id` = `r`.`id`) and \n(`u`.`name`=`p`.`user_name`) and\n(`u`.`active`=
    1)\n);\n\n-- Exportiere Struktur von View gras.validate\n-- Entferne temporäre
    Tabelle und erstelle die eigentliche View\nDROP TABLE IF EXISTS `validate`;\nCREATE
    ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `validate`
    AS select distinct `a`.`domainuser` AS `domainuser`,`a`.`password` AS `password`,`b`.`role`
    AS `role` from (`domainuser_password` `a` join `domainuser_role` `b` on `a`.`domainuser`=`b`.`domainuser`);\n\n/*!40101
    SET SQL_MODE=IFNULL(@OLD_SQL_MODE, '') */;\n/*!40014 SET FOREIGN_KEY_CHECKS=IF(@OLD_FOREIGN_KEY_CHECKS
    IS NULL, 1, @OLD_FOREIGN_KEY_CHECKS) */;\n/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT
    */;\n\n-- *** comfort procedures ***\n\n-- create domain\nDELIMITER $$\nDROP PROCEDURE
    IF EXISTS `createDomain`$$\nCREATE PROCEDURE `createDomain`(\n\tIN domainName
    VARCHAR(255),\n\tIN description VARCHAR(255)\n)\nBEGIN\n\tINSERT IGNORE INTO `gras`.`domain`
    SET `name`=domainName, `description`=description;\nEND$$\n\n\n-- create project\nDROP
    PROCEDURE IF EXISTS `createProject`$$\nCREATE PROCEDURE `createProject`(\n\tIN
    projectName VARCHAR(255),\n\tIN description VARCHAR(255)\n)\nBEGIN\n\tINSERT IGNORE
    INTO `gras`.`project` SET `name`=projectName, `description`=description;\nEND$$\n\n\n--
    disable given user\nDROP PROCEDURE IF EXISTS `disableUser`$$\nCREATE PROCEDURE
    `disableUser`(\n\tIN userName VARCHAR(255)\n)\nBEGIN\n\tUPDATE `gras`.`user` SET
    `active`=0 WHERE `name`=userName;\nEND$$\n\n\n-- enable given userName\nDROP procedure
    IF EXISTS `enableUser`$$\nCREATE PROCEDURE `enableUser`(\n\tIN userName VARCHAR(255)\n)\nBEGIN\n\tUPDATE
    `gras`.`user` SET `active`=1 WHERE `name`=userName;\nEND$$\n\n\n-- change user-password\nDROP
    procedure IF EXISTS `changePassword`$$\nCREATE PROCEDURE `changePassword`(\n\tIN
    userName VARCHAR(255),\n    IN newPassword VARCHAR(255)\n)\nBEGIN\n\tUPDATE `gras`.`user`
    SET `password`=SHA2(newPassword, 256) WHERE `name`=userName;\nEND$$\n\n\n-- user
    and privileges\nDROP procedure IF EXISTS `createUser`$$\nCREATE PROCEDURE `createUser`(\t\n\tIN
    userName VARCHAR(255),\n    IN password VARCHAR(255),\n    IN description VARCHAR(255)\n)\nBEGIN\n\tINSERT
    IGNORE INTO `user` SET `name`=userName, `password`=SHA2(password, 256), `active`=1,
    `description`=description;    \nEND$$\n\n\nDROP procedure IF EXISTS `createGroup`$$\nCREATE
    PROCEDURE `createGroup`(\n\tIN projectName VARCHAR(255),\n\tIN groupName VARCHAR(255),\n
    \   IN description VARCHAR(255)\n)\nBEGIN\n    INSERT INTO `group_` SET `name`=groupName,
    `project_name`=projectName, `description`=description;\nEND$$\n\n\nDROP procedure
    IF EXISTS `createRole`$$\nCREATE PROCEDURE `createRole`(\n\tIN projectName VARCHAR(255),\n\tIN
    roleName VARCHAR(255),\n\tIN description VARCHAR(255)   \n)\nBEGIN\n    INSERT
    INTO `role` SET `name`=roleName, `project_name`=projectName, `description`=description;\nEND$$\n\n\nDROP
    procedure IF EXISTS `createGroupRoleMapping`$$\nCREATE PROCEDURE `createGroupRoleMapping`(\n\tIN
    projectName VARCHAR(255),\n\tIN groupName VARCHAR(255),\n\tIN roleName VARCHAR(255)
    \  \n)\nBEGIN\n\tINSERT INTO `group_role_mapping` (`group_id`, `role_id`) VALUES
    (\n\t\t(SELECT id from `group_` WHERE `name`=groupName AND `project_name`=projectName),
    \n\t\t(SELECT id FROM `role` WHERE `name`=roleName)\n\t);\nEND$$\n\n\nDROP procedure
    IF EXISTS `grantAdminRights`$$\nCREATE PROCEDURE `grantAdminRights`(\n\tIN domainName
    VARCHAR(255),\n\tIN projectName VARCHAR(255),\n\tIN userName VARCHAR(255)   \n)\nBEGIN\n
    \   INSERT IGNORE INTO `permission` (`group_id`, `user_name`, `domain_name`)\n
    \     SELECT DISTINCT `id`, userName, domainName FROM `group_` WHERE `project_name`=projectName;\nEND$$\n\n\nDROP
    procedure IF EXISTS `grantStandardRights`$$\nCREATE PROCEDURE `grantStandardRights`(\n\tIN
    domainName VARCHAR(255),\n\tIN projectName VARCHAR(255),\n\tIN userName VARCHAR(255)\n)\nBEGIN\n
    \   DELETE p FROM `permission` p JOIN `group_` g ON p.`group_id`=g.`id`\n      WHERE
    p.`user_name`=userName AND p.`domain_name`=domainName AND g.`project_name`=projectName;\n
    \   INSERT INTO `permission` (`group_id`, `user_name`, `domain_name`)\n      SELECT
    DISTINCT `id`, userName, domainName FROM `group_` WHERE `project_name`=projectName
    AND `name` NOT RLIKE '[aA]dmin';\nEND$$\n\n\nDROP procedure IF EXISTS `testCredetials`$$\nCREATE
    DEFINER=`root`@`localhost` PROCEDURE `testCredetials`(\n\tIN `userName` VARCHAR(255),\n\tIN
    `passwd` VARCHAR(255)\n)\nBEGIN\n\tSELECT DISTINCT r.name AS `roles`\n\tFROM permission
    p\n\tJOIN group_role_mapping m ON p.group_id=m.group_id\n\tJOIN role r ON m.role_id=r.id\n\tJOIN
    user u ON u.name=p.user_name AND u.active=1\n\tWHERE CONCAT_WS('@',p.user_name,p.domain_name)=userName\n\tAND
    u.password=SHA2(passwd, 256);\nEND$$\n\nDELIMITER ;\n\n\n-- for remote and wildfly
    access\ncreate user 'gras_user'@'%' identified by 'gras_password';\nGRANT ALL
    PRIVILEGES ON gras.* TO 'gras_user'@'%';\n\n-- for docker exec commands\ncreate
    user 'gras_user'@'localhost' identified by 'gras_password';\nGRANT ALL PRIVILEGES
    ON gras.* TO 'gras_user'@'localhost';\n"
  01_create_database_noti.sql: "-- --------------------------------------------------------\r\n--
    Host:                         127.0.0.1\r\n-- Server Version:               8.0.19
    - MySQL Community Server - GPL\r\n-- Server Betriebssystem:        Win64\r\n--
    HeidiSQL Version:             10.3.0.5771\r\n-- --------------------------------------------------------\r\n\r\n/*!40101
    SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;\r\n/*!40101 SET NAMES
    utf8 */;\r\n/*!50503 SET NAMES utf8mb4 */;\r\n/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS,
    FOREIGN_KEY_CHECKS=0 */;\r\n/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO'
    */;\r\n\r\n\r\n-- Exportiere Datenbank Struktur für notification_service\r\nCREATE
    DATABASE IF NOT EXISTS `notification_service` /*!40100 DEFAULT CHARACTER SET utf8
    */ /*!80016 DEFAULT ENCRYPTION='N' */;\r\nUSE `notification_service`;\r\n\r\n--
    Exportiere Struktur von Tabelle notification_service.configuration\r\nCREATE TABLE
    IF NOT EXISTS `configuration` (\r\n  `id` bigint NOT NULL AUTO_INCREMENT,\r\n
    \ `activated` bit(1) DEFAULT NULL,\r\n  `configKey` varchar(255) NOT NULL,\r\n
    \ `description` text,\r\n  `value` longtext,\r\n  PRIMARY KEY (`id`),\r\n  UNIQUE
    KEY `UK_configKey` (`configKey`)\r\n) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;\r\n\r\n--
    Exportiere Daten aus Tabelle notification_service.configuration: ~0 rows (ungefähr)\r\n/*!40000
    ALTER TABLE `configuration` DISABLE KEYS */;\r\nINSERT INTO `configuration` (`id`,
    `activated`, `configKey`, `description`, `value`) VALUES\r\n\t(1, b'1', 'notification.config',
    NULL, '<org.emau.icmvc.ttp.notification.service.model.config.NotificationConfig>\\r\\n
    \   <consumerConfigs>\\r\\n        <param>\\r\\n            <!-- Eindeutige ID
    des Consumers -->\\r\\n            <key>Dispatcher</key>\\r\\n            <value
    class=\"org.emau.icmvc.ttp.notification.service.model.config.ConsumerConfig\">\\r\\n
    \               <!-- EJB, HTTP oder MQTT -->\\r\\n                <connectionType>EJB</connectionType>\\r\\n
    \               <!-- Alle Message-Typen, die der Consumer erhalten soll (oder
    \\'*\\' als Platzhalter für alle) -->\\r\\n                <messageTypes>\\r\\n
    \                   <string>EPIX.AssignIdentity</string>\\r\\n                </messageTypes>\\r\\n
    \               <!-- Alle Client-IDs von denen keine Notifikationen empfangen
    werden sollen -->\\r\\n                <excludeClientIdFilter class=\"set\">\\r\\n
    \                   <string>gICS_Web</string>\\r\\n                </excludeClientIdFilter>\\r\\n
    \               <!-- Type-Spezifische Parameter als Key-/Value-Paare, hier Beispiel
    EJB -->\\r\\n                <parameter>\\r\\n                    <param>\\r\\n
    \                       <key>ejb.jndi.url</key>\\r\\n                        <value>java:global/test-dispatcher-ear-1.15.3/dispatcher-services-1.15.3/InternalNotificationConsumer</value>\\r\\n
    \                   </param>\\r\\n                </parameter>\\r\\n            </value>\\r\\n
    \       </param>\\r\\n        <param>\\r\\n            <key>HTTPConsumer</key>\\r\\n
    \           <value class=\"org.emau.icmvc.ttp.notification.service.model.config.ConsumerConfig\">\\r\\n
    \               <connectionType>HTTP</connectionType>\\r\\n                <messageTypes>\\r\\n
    \                   <string>GICS.exampleMethodWithNotification</string>\\r\\n
    \               </messageTypes>\\r\\n                <excludeClientIdFilter class=\"set\">\\r\\n
    \                   <string>E-PIX_Web</string>\\r\\n                </excludeClientIdFilter>\\r\\n
    \               <parameter>\\r\\n                    <param>\\r\\n                        <key>url</key>\\r\\n
    \                       <value>https://httpbin.org/post</value>\\r\\n                    </param>\\r\\n
    \                   <param>\\r\\n                        <key>username</key>\\r\\n
    \                       <value>pp</value>\\r\\n                    </param>\\r\\n
    \                   <param>\\r\\n                        <key>passwort</key>\\r\\n
    \                       <value>pwd</value>\\r\\n                    </param>\\r\\n
    \               </parameter>\\r\\n            </value>\\r\\n        </param>\\r\\n
    \   </consumerConfigs>\\r\\n</org.emau.icmvc.ttp.notification.service.model.config.NotificationConfig>');\r\n/*!40000
    ALTER TABLE `configuration` ENABLE KEYS */;\r\n\r\n-- Exportiere Struktur von
    Tabelle notification_service.notifications\r\nCREATE TABLE IF NOT EXISTS `notifications`
    (\r\n  `id` bigint NOT NULL AUTO_INCREMENT,\r\n  `client_id` varchar(255) NOT
    NULL,\r\n  `consumer_id` varchar(255) NOT NULL,\r\n  `creationDate` datetime NOT
    NULL,\r\n  `data` text NOT NULL,\r\n  `send_date` datetime DEFAULT NULL,\r\n  `status`
    varchar(255) DEFAULT NULL,\r\n  `type` varchar(255) NOT NULL,\r\n  `error_message`
    text,\r\n  PRIMARY KEY (`id`)\r\n) ENGINE=InnoDB AUTO_INCREMENT=22 DEFAULT CHARSET=utf8;\r\n\r\n--
    Exportiere Struktur von Tabelle notification_service.sequence\r\nCREATE TABLE
    IF NOT EXISTS `sequence` (\r\n  `SEQ_NAME` varchar(50) NOT NULL,\r\n  `SEQ_COUNT`
    decimal(38,0) DEFAULT NULL,\r\n  PRIMARY KEY (`SEQ_NAME`)\r\n) ENGINE=InnoDB DEFAULT
    CHARSET=utf8;\r\n\r\n-- Exportiere Daten aus Tabelle notification_service.sequence:
    ~0 rows (ungefähr)\r\n/*!40000 ALTER TABLE `sequence` DISABLE KEYS */;\r\nINSERT
    INTO `sequence` (`SEQ_NAME`, `SEQ_COUNT`) VALUES\r\n\t('SEQ_GEN', 0);\r\n/*!40000
    ALTER TABLE `sequence` ENABLE KEYS */;\r\n\r\nCREATE USER 'noti_user'@'%' IDENTIFIED
    BY 'noti_password';\r\nGRANT ALL ON notification_service.* TO 'noti_user'@'%';\r\n\r\n/*!40101
    SET SQL_MODE=IFNULL(@OLD_SQL_MODE, '') */;\r\n/*!40014 SET FOREIGN_KEY_CHECKS=IF(@OLD_FOREIGN_KEY_CHECKS
    IS NULL, 1, @OLD_FOREIGN_KEY_CHECKS) */;\r\n/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT
    */;\r\n"
  02_init_database_gras_for_epix.sql: "-- version from 2020-09-11 RS\r\n\r\nUSE gras;\r\n\r\n--
    config\r\nSET @domainName  = 'ths';\r\nSET @projectName = 'epix';\r\nSET @displayName
    = 'E-PIX';\r\n\r\n-- domain\r\n-- createDomain(<domainName>, <description>)\r\nCALL
    createDomain(@domainName, 'parent domain');\r\n\r\n-- project\r\n-- createProject(<projectName>,
    <description>)\r\nCALL createProject(@projectName, @displayName);\r\n\r\n-- group_\r\n--
    createGroup(<projectName>, <groupName>, <description>)\r\nCALL createGroup(@projectName,
    CONCAT(@displayName, '-users'), 'this group is for users with basic right');\r\nCALL
    createGroup(@projectName, CONCAT(@displayName, '-admins'), 'this group is for
    users with extended right');\r\n\r\n-- role\r\n-- createRole(<projectName>, <roleName>,
    <description>)\r\nCALL createRole(@projectName, CONCAT('role.',@projectName,'.user'),
    CONCAT(@displayName, ' userspace'));\r\nCALL createRole(@projectName, CONCAT('role.',@projectName,'.admin'),
    CONCAT(@displayName, ' adminspace' ));\r\n\r\n-- group_role_mapping\r\n-- createGroupRoleMapping(<projectName>,
    <groupName>, <roleName>)\r\nCALL createGroupRoleMapping(@projectName, CONCAT(@displayName,
    '-users'), CONCAT('role.',@projectName,'.user'));\r\nCALL createGroupRoleMapping(@projectName,
    CONCAT(@displayName, '-admins'), CONCAT('role.',@projectName,'.user'));\r\nCALL
    createGroupRoleMapping(@projectName, CONCAT(@displayName, '-admins'), CONCAT('role.',@projectName,'.admin'));\r\n\r\n--
    default user \r\n-- createUser(<userName>, <password>, <description>)\r\ncall
    createUser('admin', 'ttp-tools', 'user for admin privileges');\r\ncall createUser('user',
    'ttp-tools', 'user for standard privileges');\r\n\r\n-- grant privileges for project\r\n--
    grantAdminRights(<domainName>, <projectName>, <userName>)\r\ncall grantAdminRights(@domainName,
    @projectName, 'admin');\r\n\r\n-- grantStandardRights(<domainName>, <projectName>,
    <userName>)\r\ncall grantStandardRights(@domainName, @projectName,'user');\r\n"
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: epix-init-db-config-map
  namespace: epix
